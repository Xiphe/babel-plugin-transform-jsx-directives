// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-plugin-transform-jsx-directives applies directives in nested elements 1`] = `
"import _actionDirective from \\"./test/directives/action.js\\";

<_actionDirective Elm=\\"a\\" props={{}} options=\\"none\\" next={(_Elm, _props) => <_Elm {..._props}>
        <_actionDirective Elm=\\"b\\" props={{}} options=\\"all\\" next={(_Elm2, _props2) => <_Elm2 {..._props2} />} />
      </_Elm>} />;"
`;

exports[`babel-plugin-transform-jsx-directives applies multiple directives loaded from one config 1`] = `
"import _htmlDirective from \\"./test/directives/htmlDirective.js\\";
import _actionDirective from \\"/abs/test/directives/action.js\\";

<_htmlDirective Elm=\\"html\\" props={{}} next={(_Elm2, _props2) => <_actionDirective Elm={_Elm2} props={_props2} options=\\"test\\" next={(_Elm, _props) => <_Elm {..._props} />} />} />;"
`;

exports[`babel-plugin-transform-jsx-directives applies multiple directives on same element 1`] = `
"import _htmlDirective from \\"./test/directives/html.js\\";
import _actionDirective from \\"./test/directives/action.js\\";

<_htmlDirective Elm=\\"html\\" props={{}} next={(_Elm2, _props2) => <_actionDirective Elm={_Elm2} props={_props2} options={woosa} next={(_Elm, _props) => <_Elm {..._props} />} />} />;"
`;

exports[`babel-plugin-transform-jsx-directives applies transformOptions 1`] = `
"import _fooDirective from \\"foo.js\\";

<_fooDirective Elm=\\"div\\" props={{}} options={{
      value: \\"Bar\\"
}} next={(_Elm, _props) => <_Elm {..._props} />} />;"
`;

exports[`babel-plugin-transform-jsx-directives converts jsx spread operators to object spread 1`] = `
"import _htmlDirective from \\"./test/directives/html.js\\";

<_htmlDirective Elm=\\"html\\" props={{
      ...bar
}} next={(_Elm, _props) => <_Elm {..._props} />} />;"
`;

exports[`babel-plugin-transform-jsx-directives handles boolean props 1`] = `
"import _htmlDirective from \\"./test/directives/htmlDirective.js\\";
<_htmlDirective Elm=\\"html\\" props={{
  foo: true
}} next={(_Elm, _props) => <_Elm {..._props}>foo</_Elm>} />;"
`;

exports[`babel-plugin-transform-jsx-directives handles directive paths 1`] = `
"import _htmlDirective from \\"./test/directives/htmlDirective.js\\";
<_htmlDirective Elm=\\"html\\" props={{
  foo: \\"bar\\"
}} next={(_Elm, _props) => <_Elm {..._props}>foo</_Elm>} />;"
`;

exports[`babel-plugin-transform-jsx-directives imports directive module 1`] = `
"import _changelogDirective from \\"conventional-changelog-core/conventionalChangelogDirective.js\\";
<_changelogDirective Elm=\\"changelog\\" props={{}} next={(_Elm, _props) => <_Elm {..._props} />} />;"
`;

exports[`babel-plugin-transform-jsx-directives prevents mutation of child options by parent directives 1`] = `
"import _fooDirective from \\"./test/directives/foo.js\\";
import _bazDirective from \\"./test/directives/baz.js\\";

<_fooDirective Elm=\\"html\\" props={{
      quux: true
}} options=\\"bar\\" next={(_Elm2, _props2) => <_bazDirective Elm={_Elm2} props={_props2} options=\\"qux\\" next={(_Elm, _props) => <_Elm {..._props} />} />} />;"
`;

exports[`babel-plugin-transform-jsx-directives transforms an atrribute directive 1`] = `
"import _actionDirective from \\"./test/directives/action.js\\";
<_actionDirective Elm={Button} props={{
  foo: bar
}} options={click} next={(_Elm, _props) => <_Elm {..._props}>baz</_Elm>} />;"
`;

exports[`babel-plugin-transform-jsx-directives transforms an element directive 1`] = `
"import _htmlDirective from \\"./test/directives/html.js\\";
<_htmlDirective Elm=\\"html\\" props={{
  foo: \\"bar\\"
}} next={(_Elm, _props) => <_Elm {..._props}>foo</_Elm>} />;"
`;

exports[`babel-plugin-transform-jsx-directives understands jsx 1`] = `"<foo />;"`;
